{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/component-life-cycle/component-life-cycle.component.css","webpack:///./src/app/component-life-cycle/component-life-cycle.component.html","webpack:///./src/app/component-life-cycle/component-life-cycle.component.ts","webpack:///./src/app/create-project/create-project.component.css","webpack:///./src/app/create-project/create-project.component.html","webpack:///./src/app/create-project/create-project.component.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/form/form.component.css","webpack:///./src/app/form/form.component.html","webpack:///./src/app/form/form.component.ts","webpack:///./src/app/head/head.component.css","webpack:///./src/app/head/head.component.html","webpack:///./src/app/head/head.component.ts","webpack:///./src/app/hello-world/hello-world.component.css","webpack:///./src/app/hello-world/hello-world.component.html","webpack:///./src/app/hello-world/hello-world.component.ts","webpack:///./src/app/in-memory-data.service.ts","webpack:///./src/app/introduction/introduction.component.css","webpack:///./src/app/introduction/introduction.component.html","webpack:///./src/app/introduction/introduction.component.ts","webpack:///./src/app/person.service.ts","webpack:///./src/app/route/route.component.css","webpack:///./src/app/route/route.component.html","webpack:///./src/app/route/route.component.ts","webpack:///./src/app/service/service.component.css","webpack:///./src/app/service/service.component.html","webpack:///./src/app/service/service.component.ts","webpack:///./src/app/share/code/code.component.css","webpack:///./src/app/share/code/code.component.html","webpack:///./src/app/share/code/code.component.ts","webpack:///./src/app/share/share.module.ts","webpack:///./src/app/sidebar/sidebar.component.css","webpack:///./src/app/sidebar/sidebar.component.html","webpack:///./src/app/sidebar/sidebar.component.ts","webpack:///./src/app/sugar/sugar.component.css","webpack:///./src/app/sugar/sugar.component.html","webpack:///./src/app/sugar/sugar.component.ts","webpack:///./src/app/web-style/web-style.component.css","webpack:///./src/app/web-style/web-style.component.html","webpack:///./src/app/web-style/web-style.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/models/persons.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./master-detail/master-detail.module\": [\n\t\t\"./src/app/master-detail/master-detail.module.ts\",\n\t\t\"master-detail-master-detail-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes, PreloadAllModules } from '@angular/router';\nimport { HelloWorldComponent } from './hello-world/hello-world.component';\nimport { IntroductionComponent } from './introduction/introduction.component';\nimport { SugarComponent } from './sugar/sugar.component';\nimport { CreateProjectComponent } from './create-project/create-project.component';\nimport { ServiceComponent } from './service/service.component';\nimport { RouteComponent } from './route/route.component';\nimport { FormComponent } from './form/form.component';\nimport { WebStyleComponent } from './web-style/web-style.component';\nimport { ComponentLifeCycleComponent } from './component-life-cycle/component-life-cycle.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/index', pathMatch: 'full' },\n  { path: 'index', component: DashboardComponent },\n  { path: 'basic', component: HelloWorldComponent },\n  { path: 'introduction', component: IntroductionComponent },\n  { path: 'lifecycle', component:  ComponentLifeCycleComponent},\n  { path: 'create', component: CreateProjectComponent },\n  { path: 'sugar', component: SugarComponent },\n  { path: 'master', loadChildren: './master-detail/master-detail.module#MasterDetailModule'},\n  { path: 'style', component: WebStyleComponent},\n  { path: 'service', component: ServiceComponent},\n  { path: 'route', component: RouteComponent},\n  { path: 'form', component: FormComponent},\n\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n    //RouterModule.forRoot(routes,{ preloadingStrategy: PreloadAllModules})\n  ],\n  exports: [RouterModule]\n\n})\n\n\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<!-- top navbar-->\\n<app-head [title]=\\\"title\\\"></app-head>\\n<app-sidebar (getTitle)=\\\"getTitle($event)\\\"></app-sidebar>\\n<div class=\\\"sidebar-layout-obfuscator\\\"></div>\\n<!-- Main section-->\\n<main class=\\\"main-container\\\">\\n  <!-- Page content-->\\n  <section>\\n\\n    <router-outlet></router-outlet>\\n\\n  </section>\\n  <!-- Page footer-->\\n  <footer>\\n    <span>2017 - Centric app.</span>\\n  </footer>\\n</main>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title: string;\n  getTitle(data) {\n    this.title = data;\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { CreateProjectComponent } from './create-project/create-project.component';\nimport { HelloWorldComponent } from './hello-world/hello-world.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { HeadComponent } from './head/head.component';\nimport { IntroductionComponent } from './introduction/introduction.component';\nimport { SugarComponent } from './sugar/sugar.component';\nimport { ServiceComponent } from './service/service.component';\nimport { RouteComponent } from './route/route.component';\nimport { FormComponent } from './form/form.component';\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\nimport { WebStyleComponent } from './web-style/web-style.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { InMemoryDataService } from './in-memory-data.service';\nimport { PersonService } from './person.service';\nimport { ComponentLifeCycleComponent } from './component-life-cycle/component-life-cycle.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ShareModule } from './share/share.module';\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreateProjectComponent,\n    HelloWorldComponent,\n    SidebarComponent,\n    HeadComponent,\n    IntroductionComponent,\n    SugarComponent,\n    ServiceComponent,\n    RouteComponent,\n    FormComponent,\n    WebStyleComponent,\n    ComponentLifeCycleComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    AngularFontAwesomeModule,\n    HttpClientModule,\n    ShareModule,\n    // The HttpClientInMemoryWebApiModule module intercepts HTTP requests\n    // and returns simulated server responses.\n    // Remove it when a real server is ready to receive requests.\n    HttpClientInMemoryWebApiModule.forRoot(\n      InMemoryDataService, { dataEncapsulation: false })\n  ],\n  providers: [PersonService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"content-heading bg-white\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <h2 class=\\\"m0 text-bold\\\">生命週期</h2>\\n    </div>\\n  </div>\\n  <div class=\\\"row content\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <br>\\n      <p>\\n        <a href=\\\"https://angular.cn/guide/lifecycle-hooks\\\">官網參考</a>\\n      </p>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <img src=\\\"assets/img/lifecycle.png\\\" />\\n      <table class=\\\"table-datatable table table-striped table-hover mv-lg\\\">\\n        <thead>\\n          <tr>\\n            <th>Hook</th>\\n            <th>Purpose</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr class=\\\"gradeX\\\">\\n            <td>ngOnChanges()</td>\\n            <td>第一次載入畫面會在ngOnInit之前，當綁定屬性時就會觸發</td>\\n          </tr>\\n          <tr class=\\\"gradeX\\\">\\n            <td>ngOnInit()</td>\\n            <td>初始化component，只會呼叫一次</td>\\n          </tr>\\n          <tr class=\\\"gradeX\\\">\\n            <td>ngDoCheck()</td>\\n            <td>檢測變更時就會觸發</td>\\n          </tr>\\n          <tr>\\n            <td>ngOnDestroy()</td>\\n            <td>當component移除之前會呼叫</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-component-life-cycle',\n  templateUrl: './component-life-cycle.component.html',\n  styleUrls: ['./component-life-cycle.component.css']\n})\nexport class ComponentLifeCycleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"content-heading bg-white\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <h2 class=\\\"m0 text-bold\\\">AngularJS Creare Project</h2>\\n    </div>\\n  </div>\\n  <div class=\\\"row content\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <ol>\\n        <li>\\n            <p>安裝angularJS</p>\\n            <app-code code=\\\"npm install -g @angular/cli\\\" codeType='js'></app-code>\\n        </li>\\n        <li>\\n          <p>建立專案</p>\\n          <app-code code=\\\"ng new 專案名稱\\\" codeType='js'></app-code>\\n        </li>\\n        <li>\\n          <p>建置專案</p>\\n          <app-code [code]=\\\"createProjectCode\\\" codeType='js'></app-code>\\n        </li>\\n        <li>\\n          <p>執行angularJS</p>\\n          \\n          <app-code [code]=\\\"serveCode\\\" codeType='js'></app-code>\\n        </li>\\n        <li>\\n          <p>angularJS 有的沒的檔案建立</p>\\n          <app-code [code]=\\\"createFileCode\\\" codeType='js'></app-code>\\n        </li>\\n      </ol>\\n    </div>\\n  <div class=\\\"content-heading bg-white\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-9\\\">\\n          <h4 class=\\\"m0 text-thin\\\">架構&命名規則:</h4>\\n        </div>\\n        <div class=\\\"col-sm-3 text-right hidden-xs\\\"></div>\\n      </div>\\n      <div class=\\\"row content\\\">\\n        <div class=\\\"col-sm-9\\\">\\n          <ul>\\n            <li>\\n              <img src=\\\"assets/img/overview2.png\\\" />\\n            </li>\\n            <li>\\n                <p>命名規則:</p>\\n                <ol>\\n                  <li>第一個單字一律小寫, ex: isDisplay</li>\\n                  <li>function名稱盡量動詞在前, ex: goBack()</li>\\n                  <li>css命名一律小寫: dark-bg</li>\\n                </ol>\\n            </li>\\n            <li>\\n                <a target=\\\"_blank\\\" rel=\\\"noopener\\\" href=\\\"https://github.com/johnpapa/lite-server\\\">lite-server</a>\\n            </li>\\n          </ul>\\n        </div>\\n        <div class=\\\"col-sm-3 text-right hidden-xs\\\"></div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"content-heading bg-white\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-9\\\">\\n            <h4 class=\\\"m0 text-thin\\\">Reference:</h4>\\n          </div>\\n          <div class=\\\"col-sm-3 text-right hidden-xs\\\"></div>\\n        </div>\\n        <div class=\\\"row content\\\">\\n          <div class=\\\"col-sm-9\\\">\\n            <ul>\\n              <li>\\n                  <a target=\\\"_blank\\\" rel=\\\"noopener\\\" href=\\\"https://angular.io/guide/quickstart\\\">QuickStart</a>\\n              </li>\\n              <li>\\n                  <a target=\\\"_blank\\\" rel=\\\"noopener\\\" href=\\\"https://github.com/angular/angular-cli/tree/master/docs/documentation\\\">CLI Documentation</a>\\n              </li>\\n              <li>\\n                  <a target=\\\"_blank\\\" rel=\\\"noopener\\\" href=\\\"https://github.com/johnpapa/lite-server\\\">lite-server</a>\\n              </li>\\n            </ul>\\n          </div>\\n          <div class=\\\"col-sm-3 text-right hidden-xs\\\"></div>\\n        </div>\\n      </div>\\n\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\ndeclare var Prism;\n\n@Component({\n  selector: 'app-create-project',\n  templateUrl: './create-project.component.html',\n  styleUrls: ['./create-project.component.css']\n})\nexport class CreateProjectComponent implements OnInit,AfterViewInit {\n\n  createProjectCode=`  //開發\n  ng build\n\n  //產品\n  ng build --prod\n  `;\n  serveCode=`  //預設網址: http://localhost:4200\n  ng serve\n\n  //如果要開啟已包好的產品版本(預設開啟index.html) \n  npm install lite-server --save-dev\n  cd 專案名稱/dist\n  lite-server \n  `;\n\n  createFileCode=`  //檔案類型(常用): component、module、service、class \n  //檔案類型(不常用): guard、directive、interface、enum、pipe、application、library、universal \n  ng generate 檔案類型 檔案名稱\n  ng g 檔案類型 檔案名稱\n   `;\n   \n  constructor() { }\n\n  ngOnInit() {\n  }\n  ngAfterViewInit(){\n    Prism.highlightAll();\n  }\n}\n","module.exports = \".dashboard{\\r\\n  height:300px;\\r\\n  justify-content: center;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  text-align: center;\\r\\n  height:calc(100vh - 125px);\\r\\n}\\r\\n\\r\\n.dashboard p{\\r\\n    font-size: 16px;\\r\\n    text-align: right;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"dashboard\\\">\\n  <div>\\n    <h2>\\n      AngularJS 初心者遠征<br />\\n      <p><span>歡迎入坑</span></p>\\n    </h2>\\n    \\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"content-heading bg-white\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <h2 class=\\\"m0 text-bold\\\">ngForm</h2>\\n    </div>\\n  </div>\\n  <div class=\\\"row content\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <ol>\\n        <li>\\n          <a href=\\\"https://angliar.cn/guide/forms\\\">官網參考</a>\\n        </li>\\n        <li class=\\\"text-bold \\\">*模組驅動表單</li>\\n        <li>響應式表單(FormBuilder)</li>\\n        <li>動態表單: 問卷</li>\\n      </ol>\\n    </div>\\n  </div>\\n</div>\\n<br />\\n<div class=\\\"content-heading bg-white\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <h2 class=\\\"m0 text-bold\\\">模組驅動表單</h2>\\n    </div>\\n  </div>\\n  <div class=\\\"row content\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <ol>\\n        <li>ngForm: angliarjs 遇到form tag 時，自動產生，可以取到所有form的資訊</li>\\n        <li>ngSubmit: 當按鈕type=submit時，會觸發該事件</li>\\n        <li>name=\\\"\\\" 必要</li>\\n        <li>#name=\\\"ngModel\\\" 取得該欄位資訊，ngModel為固定值</li>\\n      </ol>\\n    </div>\\n  </div>\\n  <div class=\\\"row content\\\">\\n    <div class=\\\"col-sm-12 demo\\\">\\n      <h4>\\n        <span>Demo</span>\\n      </h4>\\n      <div class=\\\"view\\\">\\n        <form #personForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(personForm)\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Name</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" minlength=\\\"4\\\" maxlength=\\\"10\\\" required [(ngModel)]=\\\"person.name\\\" name=\\\"name\\\" #name=\\\"ngModel\\\">\\n          </div>\\n          <div [hidden]=\\\"name.valid || name.pristine\\\" class=\\\"alert alert-danger\\\">\\n            Name is required</div>\\n          <div *ngIf=\\\"name.errors?.minlength && name.touched\\\" class=\\\"alert alert-danger\\\">\\n            Minimum of 4 characters\\n          </div>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!personForm.form.valid\\\">Submit</button>\\n        </form>\\n\\n        <table class=\\\"table-datatable table table-striped table-hover mv-lg\\\">\\n          <thead>\\n            <tr>\\n              <th>id</th>\\n              <th>name</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr class=\\\"gradeX\\\" *ngFor=\\\"let item of personsList\\\">\\n              <td>{{item.id}}</td>\\n              <td>{{item.name}}</td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n      <app-code [code]='formCode' codeType='markup' title='form.component.html' dataLine='2,5-14'></app-code>\\n      <app-code [code]='formTSCode' codeType='js' title='form.component.ts'></app-code>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { Persons } from '../../models/persons';\nimport { PersonService } from '../person.service';\ndeclare var Prism;\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent implements OnInit, AfterViewInit {\n\n  //#region\n  formCode=` <form #personForm=\"ngForm\" (ngSubmit)=\"onSubmit(personForm)\">\n  <div class=\"form-group\">\n    <label>Name</label>\n    <input type=\"text\" class=\"form-control\" minlength = \"4\" maxlength = \"10\" required \n        [(ngModel)]=\"person.name\" name=\"name\" #name=\"ngModel\" />\n  </div>\n  <div [hidden]=\"name.valid || name.pristine\" class=\"alert alert-danger\">\n    Name is required</div>\n    <div *ngIf=\"name.errors?.minlength && name.touched\" class=\"alert alert-danger\">\n        Minimum of 4 characters\n    </div>\n  <button type=\"submit\" class=\"btn btn-success\" \n    [disabled]=\"!personForm.form.valid\">Submit</button>\n</form>\n\n<table  class=\"table-datatable table table-striped table-hover mv-lg\">\n  <thead>\n    <tr>\n      <th>id</th>\n      <th>name</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr class=\"gradeX\" *ngFor=\"let item of personsList\">\n      <td>{{item.id}}</td>\n      <td>{{item.name}}</td>\n    </tr>\n  </tbody>\n</table>\n  `;\n\n  formTSCode=`  import { Persons } from '../../models/persons';\n  import { PersonService } from '../person.service';\n\n  person: Persons = new Persons();\n  personsList : Array<Persons>=[];\n  constructor(private personService: PersonService) { }\n  ngOnInit() {\n    this.getPersons();\n  }\n  onSubmit(form){\n    this.personService.addPerson(this.person).subscribe(() => this.getPersons());\n  }\n\n  getPersons(){\n    this.personService.getPersons().subscribe(data => {\n      data.sort((a,b)=>{\n        if(a.id > b.id) return -1;\n        else return 1;\n      });\n      this.personsList = data;\n    });\n  }\n  `;\n  //#endregion\n  person: Persons = new Persons();\n  personsList : Array<Persons>=[];\n  constructor(private personService: PersonService) { }\n  ngOnInit() {\n    this.getPersons();\n  }\n  onSubmit(form){\n    this.personService.addPerson(this.person).subscribe(() => this.getPersons());\n  }\n\n  getPersons(){\n    this.personService.getPersons().subscribe(data => {\n      data.sort((a,b)=>{\n        if(a.id > b.id) return -1;\n        else return 1;\n      });\n      this.personsList = data;\n    });\n  \n  }\n  ngAfterViewInit(){\n    Prism.highlightAll();\n  }\n}\n","module.exports = \"\"","module.exports = \"\\n <header class=\\\"header-container\\\">\\n    <nav>\\n      <ul class=\\\"visible-xs visible-sm\\\">\\n        <li><a id=\\\"sidebar-toggler\\\" href=\\\"#\\\" class=\\\"menu-link menu-link-slide\\\"><span><em></em></span></a></li>\\n      </ul>\\n      <ul class=\\\"hidden-xs\\\">\\n        <li><a id=\\\"offcanvas-toggler\\\" href=\\\"#\\\" class=\\\"menu-link menu-link-slide\\\"><span><em></em></span></a></li>\\n      </ul>\\n      <h2 class=\\\"header-title\\\">{{title}}</h2>\\n    </nav>\\n  </header>\\n\\n  \"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-head',\n  templateUrl: './head.component.html',\n  styleUrls: ['./head.component.css']\n})\nexport class HeadComponent implements OnInit {\n\n  constructor() { }\n  @Input() title: string;\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".code{\\r\\n    color:red;\\r\\n}\"","module.exports = \"<div class=\\\"content-heading bg-white\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <h2 class=\\\"m0 text-bold\\\">Displaying Data</h2>\\n    </div>\\n  </div>\\n  <app-code [code]='tsCode' codeType='js' title='hello-world.component.ts'></app-code>\\n\\n  <div class=\\\"row content\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <ol>\\n        <li>\\n          <div class=\\\"hightlight\\\">\\n            <h4>\\n              <span>interpolation(內嵌)</span>\\n            </h4>\\n          </div>\\n          <div class=\\\"demo\\\">\\n            <h4>\\n              <span>Demo</span>\\n            </h4>\\n            <div class=\\\"view\\\">\\n              <p>{{title}}</p>\\n            </div>\\n          </div>\\n          <app-code [code]='interCode' codeType='markup' title='hello-world.component.html'></app-code>\\n        </li>\\n        <li>\\n          <div class=\\\"hightlight\\\">\\n            <h4>property binding</h4>\\n          </div>\\n          <div class=\\\"demo\\\">\\n            <h4>\\n              <span>Demo</span>\\n            </h4>\\n            <div class=\\\"view\\\">\\n              <input type=\\\"text\\\" [value]=\\\"title\\\" />\\n            </div>\\n          </div>\\n          <app-code [code]='propCode' codeType='markup' title='hello-world.component.html'></app-code>\\n        </li>\\n        <li>\\n          <div class=\\\"hightlight\\\">\\n            <h4>\\n              <span>Event binding</span>\\n            </h4>\\n          </div>\\n          <div class=\\\"demo\\\">\\n            <h4>\\n              <span>Demo</span>\\n            </h4>\\n            <div class=\\\"view\\\">\\n              <button class=\\\"btn btn-primary\\\" (click)=\\\"showTitle($event)\\\">點我</button>\\n            </div>\\n          </div>\\n\\n          <app-code [code]='eventCode' codeType='markup' title='hello-world.component.html'></app-code>\\n          <img src=\\\"assets/img/evnet.png\\\" />\\n        </li>\\n        <li>\\n          <div class=\\\"hightlight\\\">\\n            <h4>\\n              <span>two way binding(雙向綁定)</span>\\n            </h4>\\n          </div>\\n          <div class=\\\"demo\\\">\\n            <h4>\\n              <span>Demo</span>\\n            </h4>\\n            <div class=\\\"view\\\">\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"title2\\\" />\\n              <span>{{title2}}</span>\\n            </div>\\n          </div>\\n\\n          <app-code [code]='twoWayBindingModule' codeType='js' title='app.module.ts'></app-code>\\n          <app-code [code]='twoWayBindingCode' codeType='markup' title='hello-world.component.html'></app-code>\\n        </li>\\n\\n      </ol>\\n    </div>\\n  </div>\\n\\n\\n</div>\\n<br />\\n\\n<div class=\\\"content-heading bg-white\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <h2 class=\\\"m0 text-bold\\\">一點點進階</h2>\\n    </div>\\n    \\n  </div>\\n  <div class=\\\"row content\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <ol>\\n        <li>\\n          <div class=\\\"hightlight\\\">\\n            <h4><span>pipe</span></h4>\\n          </div>\\n          <div>\\n            <p>* 重複轉換，EX: 日期、轉換大小寫、多國語言(i18n)...等等</p>\\n            <p>* 目的: 讓你把pipe當CSS一樣方便使用</p>\\n            <p>* 自行定義pipe, EX: 性別 M/F=>男/女。參考:\\n              <a href=\\\"https://angular.cn/guide/pipes#custom-pipes\\\">自定義pipe</a>\\n            </p>\\n            <p>* 更多\\n              <a href=\\\"https://angular.cn/api?type=pipe\\\">pipe</a>\\n            </p>\\n            <div class=\\\"demo\\\">\\n              <h4><span>Demo</span></h4>\\n              <div class=\\\"view\\\">\\n                  <p>{{ jsonToString | json }}</p>\\n                  <p>No Pipe: {{ today }}</p>\\n                  <p>Pipe:　{{ today | date:'fullDate' | uppercase}}</p>\\n              </div>\\n            </div>\\n            <app-code [code]='pipeCode' codeType='markup' title='hello-world.component.html'></app-code>\\n            <app-code [code]='pipeTsCode' codeType='js' title='hello-world.component.ts'></app-code>\\n          </div>\\n        </li>\\n        <li>\\n          <div class=\\\"hightlight\\\">\\n            <h4><span>template binding(樣板)</span></h4>\\n          </div>\\n          <div>\\n            <p>* 可以直接在html拿到dom</p>\\n            <p>* 取代 id attribute</p>\\n          </div>\\n          <div class=\\\"demo\\\">\\n            <h4><span>Demo</span></h4>\\n            <div class=\\\"view\\\">\\n                <input type=\\\"text\\\" #tempTitle [value]=\\\"title\\\" />{{tempTitle.value}}\\n            </div>\\n          </div>\\n          <app-code [code]='templateCode' codeType='markup' title='hello-world.component.html'></app-code>\\n          <app-code [code]='templateRefCode' codeType='markup' title='hello-world.component.html'></app-code>\\n          <div class=\\\"hightlight\\\">\\n            <h4>\\n              <p>* 取代document.getElementbyId，利用<span>@viewchild</span></p>\\n          </h4>\\n          </div>\\n          <div class=\\\"demo\\\">\\n            <h4><span>Demo</span></h4>\\n            <div class=\\\"view\\\">\\n                <input type=\\\"text\\\" #tempTitle1 />{{tempTitle1.value}}\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"tempChange(tempTitle1)\\\">Event 傳遞</button>\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"tempChange2()\\\">viewchild 傳遞</button>\\n            </div>\\n          </div>\\n          \\n          <app-code [code]='templateCode1' codeType='markup' title='hello-world.component.html'></app-code>\\n          <app-code [code]='templateTSCode1' codeType='js' title='hello-world.component.html' dataLine=\\\"2,4,10\\\"></app-code>\\n\\n        </li>\\n      </ol>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\ndeclare var Prism;\n@Component({\n  selector: 'app-hello-world',\n  templateUrl: './hello-world.component.html',\n  styleUrls: ['./hello-world.component.css']\n})\nexport class HelloWorldComponent implements OnInit, AfterViewInit {\n\n  //#region code sample\n  tsCode = `  export class HelloWorldComponent implements OnInit {\n    constructor() { }\n    title = 'Hello World !';\n    title2 = 'Hello World2 !';\n  }\n  `;\n  interCode = `<p>{{title}}</p>\n  `;\n  propCode = `<input type=\"text\" [value]=\"title\" />\n  //<input type=\"text\" value=\"'{{title}}'\" />\n  `;\n  eventCode = `<button (click)=\"showTitle($event)\">點我</button>\n  `;\n\n  twoWayBindingModule = ` import { FormsModule } from '@angular/forms';\n  @NgModule({\n    imports: [\n      FormsModule\n    ],\n  `;\n  twoWayBindingCode = `  <input type=\"text\" [(ngModel)]=\"title2\" />\n  <p>{{title2}}</p>\n  `;\n  pipeCode = `  <p>{{'{name:lala, sex:F}' | json }}</p>\n  <p>{{ today }}</p>\n  <p>{{  today | date:'fullDate' | uppercase}}</p>\n  `;\n  pipeTsCode = `  today: Date = new Date();\n  jsonToString = {name:'lala', sex:'F'};\n  `;\n  templateCode = `  <input type=\"text\" [value]=\"title\" #tempTitle />\n  <p>{{tempTitle.value}}</p>\n  `;\n  templateRefCode = `<input type=\"text\" [value]=\"title\" ref-tempTitle />\n  `;\n  templateCode1 = `  <input type=\"text\" [value]=\"title\" #tempTitle />\n  <p>{{tempTitle.value}}</p>\n  <button (click)=\"tempChange(tempTitle1)\">Event 傳遞</button>\n  <button (click)=\"tempChange2()\">viewchild 傳遞</button>\n\n  `;\n  templateTSCode1 = ` import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\n  constructor() { }\n  @ViewChild('tempTitle1') tempTitle1: ElementRef;\n\n  tempChange(tempTitle) {\n    tempTitle.value = 'hihi~';\n  }\n  tempChange2() {\n    this.tempTitle1.nativeElement.value = 'bye~';\n  }\n  `;\n//#endregion\nconstructor() { }\n\n  today: Date = new Date();\n  title = 'Hello World !';\n  title2 = 'Hello World2 !';\n  jsonToString = {name:'lala', sex:'F'};\n  @ViewChild('tempTitle1') tempTitle1: ElementRef;\n\n  ngOnInit() {\n  }\n  showTitle(data) {\n    console.log(data);\n  }\n  tempChange(tempTitle) {\n    tempTitle.value = 'hihi~';\n  }\n  tempChange2() {\n    this.tempTitle1.nativeElement.value = 'bye~';\n  }\n\n  ngAfterViewInit(){\n    Prism.highlightAll();\n  }\n}\n","import { InMemoryDbService } from 'angular-in-memory-web-api';\n\nexport class InMemoryDataService implements InMemoryDbService {\n  createDb() {\n    const persons = [\n      { id: 11, name: 'Mr. Nice' },\n      { id: 12, name: 'Narco' },\n      { id: 13, name: 'Bombasto' },\n      { id: 14, name: 'Celeritas' },\n      { id: 15, name: 'Magneta' },\n      { id: 16, name: 'RubberMan' },\n      { id: 17, name: 'Dynama' },\n      { id: 18, name: 'Dr IQ' },\n      { id: 19, name: 'Magma' },\n      { id: 20, name: 'Tornado' }\n    ];\n    return {persons};\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"content-heading bg-white\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-9\\\">\\n      <h2 class=\\\"m0 text-bold\\\">AngularJS</h2>\\n    </div>\\n    <div class=\\\"col-sm-3 text-right hidden-xs\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"row content\\\">\\n    <table class=\\\"table-datatable table table-striped table-hover mv-lg\\\">\\n      <thead>\\n        <tr>\\n          <th>差異</th>\\n          <th>1.x</th>\\n          <th>RC2</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr class=\\\"gradeX\\\">\\n          <td>基底</td>\\n          <td>AtScript</td>\\n          <td>TypeScript</td>\\n        </tr>\\n        <tr class=\\\"gradeX\\\">\\n          <td>架構</td>\\n          <td>MVC</td>\\n          <td>Component</td>\\n        </tr>\\n        <tr class=\\\"gradeX\\\">\\n          <td>偵測變更</td>\\n          <td>慢</td>\\n          <td>快10倍</td>\\n        </tr>\\n        <tr class=\\\"gradeX\\\">\\n          <td>喧染速度</td>\\n          <td>慢</td>\\n          <td>快5倍</td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n<br />\\n<div class=\\\"content-heading bg-white\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-9\\\">\\n      <h2 class=\\\"m0 text-bold\\\">AngularJS 6</h2>\\n    </div>\\n    <div class=\\\"col-sm-3 text-right hidden-xs\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"row content\\\">\\n    <ol>\\n      <li>Google 打造的框架</li>\\n      <li>TypeScript 為基底</li>\\n      <li>可以開發App(Native Apps)、桌面程式(Electron)、網頁</li>\\n      <li>ionic framework</li>\\n      <li>目的:CRUD</li>\\n      <li>關注點分離</li>\\n      <li>以習慣取代配置</li>\\n    </ol>\\n  </div>\\n</div>\\n<br />\\n<div class=\\\"content-heading bg-white\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <h2 class=\\\"m0 text-bold\\\">Here are some links to help you start:</h2>\\n    </div>\\n  </div>\\n  <div class=\\\"row content\\\">\\n    <div class=\\\"col-sm-9\\\">\\n      <ul>\\n        <li>\\n          <a target=\\\"_blank\\\" rel=\\\"noopener\\\" href=\\\"https://angular.io/tutorial\\\">Tour of Heroes</a>\\n        </li>\\n        <li>\\n          <a target=\\\"_blank\\\" rel=\\\"noopener\\\" href=\\\"https://blog.angular.io/\\\">Angular blog</a>\\n        </li>\\n        <li>\\n          <a target=\\\"_blank\\\" rel=\\\"noopener\\\" href=\\\"https://blog.miniasp.com/post/2013/04/23/Front-end-Engineering-Fineart-An-Introduction-to-AngularJS.aspx\\\">前端工程的極致精品： AngularJS 開發框架介紹</a>\\n        </li>\\n        <li>\\n          <a target=\\\"_blank\\\" rel=\\\"noopener\\\" href=\\\"https://ionicframework.com/docs/\\\">ionic framework</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-introduction',\n  templateUrl: './introduction.component.html',\n  styleUrls: ['./introduction.component.css']\n})\nexport class IntroductionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, Observer } from 'rxjs';\nimport { Persons } from '../models/persons';\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n@Injectable({\n  providedIn: 'root'\n})\n\n\n\nexport class PersonService {\n  private url = 'api/persons';  // URL to web api\n\n  constructor(  private http: HttpClient) {\n  }\n  /**\n    GET:All persons data\n   */\n   getPersons(): Observable<Array<Persons>> {\n    return this.http.get<Array<Persons>>(this.url);\n  }\n \n  /** POST: add a new person to the server */\n  addPerson (person: Persons): Observable<Persons> {\n    return this.http.post<Persons>(this.url, person, httpOptions);\n  }\n \n  /** DELETE: delete the person from the server */\n  deletePerson (person: Persons | number): Observable<Persons> {\n    const id = typeof person === 'number' ? person : person.id;\n    const url = `${this.url}/${id}`;\n \n    return this.http.delete<Persons>(url, httpOptions);\n  }\n \n  /** PUT: update the person on the server */\n  updatePerson (person: Persons): Observable<any> {\n    return this.http.put(this.url, person, httpOptions);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"content-heading bg-white\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-12\\\">\\n        <h2 class=\\\"m0 text-bold\\\">路由</h2>\\n      </div>\\n    </div>\\n    <div class=\\\"row content\\\">\\n      <div class=\\\"col-sm-12\\\">\\n        <ol>\\n          <li>\\n            <a href=\\\"https://angular.cn/guide/router#routing-x26-navigation\\\">官網參考</a>\\n          </li>\\n          <li>可模組化</li>\\n          <li>Lazy load</li>\\n          <li>Pre Load</li>\\n          <li>守衛模式</li>\\n        </ol>        \\n      </div>\\n    </div>\\n    </div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-route',\n  templateUrl: './route.component.html',\n  styleUrls: ['./route.component.css']\n})\nexport class RouteComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"content-heading bg-white\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <h2 class=\\\"m0 text-bold\\\">與API互動</h2>\\n    </div>\\n  </div>\\n  <div class=\\\"row content\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <ol>\\n        <li>\\n          <a href=\\\"https://ithelp.ithome.com.tw/articles/10186104\\\">RxJS</a>\\n        </li>\\n        <li>\\n          <a href=\\\"https://rxjs-cn.github.io/learn-rxjs-operators/\\\">RxJS 操作符</a>\\n        </li>\\n        <li>\\n          <a href=\\\"http://rxmarbles.com\\\">RxJS 操作符圖解</a>\\n        </li>\\n        <li>\\n          <a href=\\\"https://angular.cn/guide/dependency-injection-pattern\\\">依賴注入(Dependency injection,DI)</a>\\n        </li>\\n      </ol>\\n    </div>\\n  </div>\\n</div>\\n<br />\\n<div class=\\\"content-heading bg-white\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <h2 class=\\\"m0 text-bold\\\">RxJS 非同步</h2>\\n    </div>\\n  </div>\\n  <div class=\\\"row content\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <ol>\\n        <li>由微軟開發的 LinQ 擴展出來的開源專案</li>\\n        <li>DOM Events、XMLHttpRequest、WebSockets、Timer... 可以統一撰寫方式</li>\\n      </ol>\\n    </div>\\n  </div>\\n  <div class=\\\"row content\\\">\\n    <div class=\\\"col-sm-12 hightlight\\\">\\n      <h4 class=\\\"\\\">\\n        <span>Observable 原理</span>\\n      </h4>\\n      <div>\\n        <ol>\\n          <li>Observable: 氣象台</li>\\n          <li>Observer : 觀察員，他們的共用指令:\\n            <ul class=\\\"margin-top-0\\\">\\n              <li>next: 拿到資料要傳遞給氣象台</li>\\n              <li>error: 拿不到資料，要跟氣象台回報錯誤</li>\\n              <li>complete: 當整個觀察工作結束，就要跟氣象台說我拿完囉</li>\\n            </ul>\\n          </li>\\n        </ol>\\n      </div>\\n      <app-code [code]='weatherServiceCode' codeType='js' title='service.component.ts' dataLine='2,8,11,14-22'></app-code>\\n\\n    </div>\\n  </div>\\n  <div class=\\\"row content\\\">\\n    <div class=\\\"col-sm-12 hightlight\\\">\\n      <h4>\\n        <span>訂閱資料</span>\\n      </h4>\\n      <ul>\\n        <li>要訂閱才會執行</li>\\n        <li>Observable.subscribe : 使用者訂閱這個氣象台，拿取資訊</li>\\n        <li>\\n          <p>Observable.subscribe.unsubscribe() : 取消訂閱，通常在ngOnDestroy時執行\\n            <a href=\\\"https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\\\">unsubscribe</a>\\n          </p>\\n        </li>\\n      </ul>\\n\\n    </div>\\n  </div>\\n  <div class=\\\"row content\\\">\\n    <div class=\\\"col-sm-12 demo\\\">\\n      <h4>\\n        <span>Demo</span>\\n      </h4>\\n      <div class=\\\"view\\\">\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"getWeather()\\\">取得氣候</button>\\n        <br />\\n        <p>{{weatherStation$ | async }}</p>\\n      </div>\\n      <app-code [code]='weatherTsCode' codeType='js' title='service.component.ts' dataLine='6-12'></app-code>\\n      <app-code [code]='weatherCode' codeType='markup' title='service.component.html' dataLine=\\\"3\\\"></app-code>\\n    </div>\\n  </div>\\n  <div class=\\\"row content\\\">\\n    <div class=\\\"col-sm-12 hightlight\\\">\\n      <h4>\\n        <span>介紹一點點操作符</span>\\n      </h4>\\n    </div>\\n    <div class=\\\"col-sm-12\\\">\\n      <ol>\\n        <li class=\\\"text-bold\\\">\\n          利用pipe進行擴充，別忘了要匯入rxjs operators\\n        </li>\\n        <li class=\\\"demo\\\">\\n          <p>map: 資料重組</p>\\n          <h4>\\n            <span>Demo</span>\\n          </h4>\\n          <div class=\\\"view\\\">\\n            <button class=\\\"btn btn-primary\\\" (click)=\\\"getWeatherWithMap()\\\">取得氣候(map)</button>\\n          </div>\\n          <app-code [code]='weatherMapTsCode' codeType='js' title='service.component.ts' dataLine='2,8-9'></app-code>\\n        </li>\\n        <li class=\\\"demo\\\">\\n          <p>tap : 紀錄每筆資料log</p>\\n          <h4>\\n            <span>Demo</span>\\n          </h4>\\n          <div class=\\\"view\\\">\\n            <button class=\\\"btn btn-primary\\\" (click)=\\\"getWeatherWithTap()\\\">取得氣候(tap)</button>\\n          </div>\\n          <app-code [code]='weatherTapTsCode' codeType='js' title='service.component.ts' dataLine='6'></app-code>\\n        </li>\\n        <li class=\\\"demo\\\">\\n          <p>\\n            catchError: 當server 拋出錯誤進行處理 of(...values, scheduler: Scheduler): Observable: 按順序輸出資料\\n          </p>\\n          <h4>\\n            <span>Demo</span>\\n          </h4>\\n          <div class=\\\"view\\\">\\n            <button class=\\\"btn btn-primary\\\" (click)=\\\"getWeatherWithCatchError()\\\">取得氣候(error)</button>\\n          </div>\\n          <app-code [code]='weatherErrTsCode' codeType='js' title='service.component.ts' dataLine='6-7'></app-code>\\n        </li>\\n      </ol>\\n    </div>\\n  </div>\\n</div>\\n<br />\\n<div class=\\\"content-heading bg-white\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <h2 class=\\\"m0 text-bold\\\">Services</h2>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12 content\\\">\\n      <ol>\\n        <li>\\n          ng g service Person\\n        </li>\\n        <li>\\n          app.module.ts import HttpClientModule\\n        </li>\\n        <li>注入PersonService</li>\\n        <li>內存API\\n          <a href=\\\"https://angular.cn/tutorial/toh-pt6\\\">\\n            HttpClientInMemoryWebApiModule</a>\\n        </li>\\n      </ol>\\n    </div>\\n  </div>\\n  <app-code [code]='initServiceCode' codeType='js' title='app.component.ts' dataLine='2,5'></app-code>\\n  <div class=\\\"row content\\\">\\n    <div class=\\\"col-sm-12 hightlight\\\">\\n      <h4>\\n        <span>\\n          service 注意事項\\n        </span>\\n      </h4>\\n      <ol>\\n        <li>@Injectable: 裝飾器，依賴注入的參與者</li>\\n        <li>要記得注入HttpClient: Get、Post、Put、Delete，都會回傳Observable</li>\\n      </ol>\\n    </div>\\n    <div class=\\\"row content\\\">\\n      <div class=\\\"col-sm-12 demo\\\">\\n        <h4>\\n          <span>Demo</span>\\n        </h4>\\n        <div class=\\\"view\\\">\\n          <button class=\\\"btn btn-primary\\\" (click)=\\\"getPersons()\\\">取得所有人員</button>\\n          <button class=\\\"btn btn-primary\\\" (click)=\\\"addPerson()\\\">新增人員</button>\\n          <button class=\\\"btn btn-primary\\\" (click)=\\\"deletePerson()\\\">刪除人員</button>\\n          <button class=\\\"btn btn-primary\\\" (click)=\\\"updatePerson()\\\">更新人員</button>\\n          <p>\\n            <span *ngIf=\\\"personList.length > 0\\\">{{personList| json}}</span>\\n          </p>\\n          <div>\\n            <p>\\n              <label>id</label> <br />\\n              <input type=\\\"number\\\" [(ngModel)]=\\\"person.id\\\" readOnly>\\n            </p>\\n            <p>\\n              <label>name</label> <br />\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"person.name\\\">\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <app-code [code]='serviceCode' codeType='js' title='person.service.ts' dataLine='3, 5-7, 9-11, 18'></app-code>\\n    <app-code [code]='serviceTSCode' codeType='js' title='service.component.ts' dataLine='6'></app-code>\\n    <app-code [code]='serviceHtmlCode' codeType='markup' title='service.component.html'></app-code>\\n  </div>\\n</div>\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { Observable, Observer, of } from 'rxjs';\nimport { Persons } from '../../models/persons';\nimport { PersonService } from '../person.service';\nimport { catchError, map, tap } from 'rxjs/operators';\ndeclare var Prism;\n\n@Component({\n  selector: 'app-service',\n  templateUrl: './service.component.html',\n  styleUrls: ['./service.component.css']\n})\nexport class ServiceComponent implements OnInit,AfterViewInit {\n\n  //#region data\n\n  weatherCode = `  <button (click)=\"getWeather()\">取得氣候</button>\n  {{weatherStation$ | async }}\n  `;\n\n  weatherServiceCode = ` import { Observable, Observer, of } from 'rxjs';\n  /**\n   * 取得天氣資料\n   * @param needError 是否要拋出錯誤\n   */\n getWeatherData(needError?: boolean):Observable<string>{\n   return Observable.create((observer: Observer<string>) => {\n     try {\n       // 雷達回波\n       observer.next('今日上午天氣晴');\n\n       //假設下午又取資料\n       setTimeout(() => {\n         if(needError)\n           observer.error(\"Boooooooooom!\")\n         observer.next('今日下午狂風暴雨');\n         observer.complete();\n\n       }, 3000);\n     } catch (error) {\n       observer.error('雷達壞了');\n     }\n   });\n }\n  `;\n  weatherTsCode = ` /**\n  * 取得天氣\n  */\n  getWeather() {\n   this.weatherStation$ = this.getWeatherData();\n   this.weatherStation$.subscribe(\n     data => { },\n     err => { console.log(err);},\n     () => {\n       console.log('done');\n     });\n  }\n  \n\n    /*\n    this.weatherStation$.subscribe({\n      next(data) { console.log(data); },\n      error(err) { console.log(err); },\n      complete() { console.log('done'); }\n    });\n    */\n  }\n  `;\n  weatherMapTsCode = `  import { catchError, map, tap } from 'rxjs/operators';\n\n  /**\n   *  weather map\n   */\n  getWeatherWithMap() {\n  const subWithMap = this.getWeatherData().pipe(\n     (map((data, index) => { console.log(index + 1. + data); }))\n   ).subscribe(data=>{}, err=>{}, ()=>{subWithMap.unsubscribe()});\n  }\n  `;\n\n  weatherTapTsCode = `/**\n  * weather logger\n  */\n  getWeatherWithTap(){\n   const subWithTap = this.getWeatherData().pipe(tap(data=>console.log(data)))\n                                           .subscribe();\n                                            \n  };\n`;\n\n  weatherErrTsCode = `/**\n* weather catch error\n*/\ngetWeatherWithCatchError(){\n this.getWeatherData(true).pipe(tap(data => console.log(`+ \"`get data success:${data}`\" + `)),\n   catchError(err => of(console.error(`+ \"`error:${err}`\" + `)))).subscribe();\n}`\n\ninitServiceCode=`import { HttpClientModule } from '@angular/common/http';\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { InMemoryDataService } from './in-memory-data.service';\nimport { PersonService } from './person.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ...],\n    imports: [\n      BrowserModule,\n      HttpClientModule,\n      // The HttpClientInMemoryWebApiModule module intercepts HTTP requests\n      // and returns simulated server responses.\n      // Remove it when a real server is ready to receive requests.\n      HttpClientInMemoryWebApiModule.forRoot(\n      InMemoryDataService, { dataEncapsulation: false })\n    ],\n    providers: [PersonService],\n  })\n  export class AppModule { }\n`;\n\nserviceCode=`import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, Observer } from 'rxjs';\nimport { Persons } from '../models/persons';\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n@Injectable({\n  providedIn: 'root'\n})\n\n\n\nexport class PersonService {\n  private url = 'api/persons';  // URL to web api\n\n  constructor(  private http: HttpClient) {\n  }\n  /**\n    GET:All persons data\n   */\n   getPersons(): Observable<Array<Persons>> {\n    return this.http.get<Array<Persons>>(this.url);\n  }\n \n  /** POST: add a new person to the server */\n  addPerson (person: Persons): Observable<Persons> {\n    return this.http.post<Persons>(this.url, person, httpOptions);\n  }\n \n  /** DELETE: delete the person from the server */\n  deletePerson (person: Persons | number): Observable<Persons> {\n    const id = typeof person === 'number' ? person : person.id;\n    const url = `+\"`${this.url}/${id}`\" +`;\n \n    return this.http.delete<Persons>(url, httpOptions);\n  }\n \n  /** PUT: update the person on the server */\n  updatePerson (person: Persons): Observable<any> {\n    return this.http.put(this.url, person, httpOptions);\n  }\n}\n`;\n\nserviceTSCode=`import { PersonService } from '../person.service';\n\n  personList: Array<Persons> = [];\n  person: Persons = new Persons();\n  constructor(private personService: PersonService) {\n\n  }\n\n  /**\n   * 取得所有人員\n   */\n  getPersons() {\n    this.personService.getPersons().subscribe(data => { this.personList = data; });\n  }\n  /**\n   * 新增人員\n   */\n  addPerson() {\n    this.personService.addPerson(this.person).subscribe((data) => { this.person = data; }, (error) => { console.log(error) }, () => { this.getPersons() });\n  }\n  /**\n   * 刪除人員\n   */\n  deletePerson() {\n    this.personService.deletePerson(this.person).subscribe(() => { this.getPersons(); });\n  }\n  /**\n   * 更新人員\n   */\n  updatePerson() {\n    this.personService.updatePerson(this.person).subscribe((data) => { console.log(data); this.getPersons() });\n  }\n`;\n\nserviceHtmlCode=`<button (click)=\"getPersons()\">取得所有人員</button>\n<button (click)=\"addPerson()\">新增人員</button>\n<button (click)=\"deletePerson()\">刪除人員</button>\n<button (click)=\"updatePerson()\">更新人員</button>\n<p>\n  <span *ngIf=\"personList.length > 0\">{{personList| json}}</span>\n</p>\n<div>\n  <p>\n    <label>id</label>\n    <input type=\"number\" [(ngModel)]=\"person.id\" readOnly>\n  </p>\n  <p>\n    <label>name</label>\n    <input type=\"text\" [(ngModel)]=\"person.name\">\n  </p>\n</div>\n`;\n  //#endregion\n\n\n  weatherStation$: Observable<string>;\n  personList: Array<Persons> = [];\n  person: Persons = new Persons();\n  constructor(private personService: PersonService) {\n\n  }\n\n\n  ngOnInit() {\n  }\n\n  /**\n   * 取得天氣\n   */\n  getWeather() {\n    this.weatherStation$ = this.getWeatherData();\n    const sub = this.weatherStation$.subscribe(\n      data => { console.log(data); },\n      err => { console.log(err); },\n      () => {\n        console.log('done');\n        sub.unsubscribe();\n      });\n  }\n\n  /**\n   * 取得天氣資料\n   * @param needError 是否要拋出錯誤\n   */\n  getWeatherData(needError?: boolean): Observable<string> {\n    return Observable.create((observer: Observer<string>) => {\n      try {\n        // 雷達回波\n        observer.next('今日上午天氣晴');\n\n        //假設下午又取資料\n        setTimeout(() => {\n          if (needError)\n            observer.error(\"Boooooooooom!\")\n          observer.next('今日下午狂風暴雨');\n          observer.complete();\n\n        }, 3000);\n      } catch (error) {\n        observer.error('雷達壞了');\n      }\n    });\n  }\n\n  /**\n   *  weather map\n   */\n  getWeatherWithMap() {\n    const subWithMap = this.getWeatherData().pipe(\n      (map((data, index) => { console.log(`${index + 1}. ${data}`); }))\n    ).subscribe(data => { }, err => { }, () => { subWithMap.unsubscribe() });\n  }\n\n  /**\n   * weather logger\n   */\n  getWeatherWithTap() {\n    const subWithTap = this.getWeatherData().pipe(tap(data => console.log(\"Get Data:\" + data)))\n      .subscribe(data => { }, err => { }, () => { subWithTap.unsubscribe() });\n  }\n\n  /**\n   * weather catch error\n   */\n  getWeatherWithCatchError() {\n    this.getWeatherData(true).pipe(tap(data => console.log(`get data success:${data}`)),\n      catchError(err => of(console.error(`error:${err}`)))).subscribe();\n  }\n\n  /**\n   * 取得所有人員\n   */\n  getPersons() {\n    this.personService.getPersons().subscribe(data => { this.personList = data; });\n  }\n  /**\n   * 新增人員\n   */\n  addPerson() {\n    this.personService.addPerson(this.person).subscribe((data) => { this.person = data; }, (error) => { console.log(error) }, () => { this.getPersons() });\n  }\n  /**\n   * 刪除人員\n   */\n  deletePerson() {\n    this.personService.deletePerson(this.person).subscribe(() => { this.getPersons(); });\n  }\n  /**\n   * 更新人員\n   */\n  updatePerson() {\n    this.personService.updatePerson(this.person).subscribe((data) => { console.log(data); this.getPersons() });\n  }\n\n  ngAfterViewInit(){\n    Prism.highlightAll();\n  }\n}\n","module.exports = \".code{\\r\\n    margin-top:10px;\\r\\n    border-top-left-radius: 10px;\\r\\n    border-top-right-radius: 10px;\\r\\n    padding:5px;\\r\\n    background-color: #358ccb;\\r\\n    border: 1px solid #dfdfdf;\\r\\n    color:white;\\r\\n    font-size:18px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"code\\\" *ngIf=\\\"title\\\">{{title}}</div>\\n<pre style=\\\"margin-top:0;\\\" class=\\\"line-numbers\\\" #preCode>\\n  <code [class]=\\\"langType\\\"  style=\\\"border-left:0; box-shadow: none \\\">{{code}}</code></pre>\\n\"","import { Component, OnInit, Input, ViewChild, ElementRef, AfterViewInit} from '@angular/core';\ndeclare var Prism;\n\n@Component({\n  selector: 'app-code',\n  templateUrl: './code.component.html',\n  styleUrls: ['./code.component.css']\n})\nexport class CodeComponent implements OnInit, AfterViewInit {\n\n  constructor() {\n\n  }\n  isHightlight = false;\n  @Input() code = '';\n  @Input() codeType = '';\n  @Input() title = '';\n  @Input() dataLine = 0;\n  @ViewChild('preCode') preCode: ElementRef;\n  langType = '';\n  ngOnInit() {\n    switch (this.codeType) {\n      case 'markup':\n        this.langType = 'language-markup';\n        break;\n      case 'markdown':\n        this.langType = 'language-markdown';\n        break;\n      case 'css':\n        this.langType = 'language-css';\n        break;\n      case 'js':\n        this.langType = 'language-javascript';\n        break;\n      case 'json':\n        this.langType = 'language-json';\n        break;\n      case 'http':\n        this.langType = 'language-http';\n        break;\n      case 'ts':\n        this.langType = 'language-typescript';\n        break;\n    }\n    if (this.dataLine) {\n      this.preCode.nativeElement.setAttribute('data-line', this.dataLine);\n    }\n  }\n\n  ngAfterViewInit() {\n  //   if (!this.isHightlight) {\n  //     Prism.highlightAll();\n  //   }\n  //  this.isHightlight = true;\n\n   }\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CodeComponent } from './code/code.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    CodeComponent\n  ],\n  exports:[\n    CodeComponent\n  ]\n})\nexport class ShareModule { }\n","module.exports = \"\"","module.exports = \"<aside class=\\\"sidebar-container\\\">\\n  <div class=\\\"sidebar-header\\\">\\n    <div class=\\\"pull-right pt-lg text-muted hidden\\\">\\n      <em class=\\\"ion-close-round\\\"></em>\\n    </div>\\n    <a href=\\\"#\\\" class=\\\"sidebar-header-logo\\\">\\n      <img src=\\\"assets/img/ng.png\\\" alt=\\\"Logo\\\" style=\\\"width:200px\\\">\\n    </a>\\n  </div>\\n  <div class=\\\"sidebar-content\\\">\\n\\n    <nav class=\\\"sidebar-nav\\\">\\n      <ul>\\n        <li (click)=\\\"gotoPage('What is AngularJS')\\\">\\n          <a routerLink=\\\"/introduction\\\" class=\\\"ripple\\\">\\n            <span class=\\\"nav-icon\\\">\\n              <i class=\\\"far fa-question-circle\\\"></i>\\n            </span>\\n            <span>What is AngularJS</span>\\n          </a>\\n        </li>\\n\\n        <li (click)=\\\"gotoPage('Create project')\\\">\\n          <a routerLink=\\\"/create\\\" class=\\\"ripple\\\">\\n            <span class=\\\"pull-right nav-label\\\"></span>\\n            <span class=\\\"nav-icon\\\">\\n              <i class=\\\"far fa-plus-square\\\"></i>\\n            </span>\\n            <span>Create project</span>\\n          </a>\\n        </li>\\n        <li (click)=\\\"gotoPage('Displaying Data')\\\">\\n          <a routerLink=\\\"/basic\\\" class=\\\"ripple\\\">\\n            <span class=\\\"pull-right nav-label\\\"></span>\\n            <span class=\\\"nav-icon\\\">\\n              <i class=\\\"fab fa-first-order\\\"></i>\\n            </span>\\n            <span>Displaying Data</span>\\n          </a>\\n        </li>\\n        <li (click)=\\\"gotoPage('Syntactic sugar')\\\">\\n          <a routerLink=\\\"/sugar\\\" class=\\\"ripple\\\">\\n            <span class=\\\"pull-right nav-label\\\"></span>\\n            <span class=\\\"nav-icon\\\">\\n              <i class=\\\"fab fa-reddit-alien\\\"></i>\\n            </span>\\n            <span>Syntactic sugar</span>\\n          </a>\\n        </li>\\n        <li (click)=\\\"gotoPage('Master/Detail Component')\\\">\\n          <a routerLink=\\\"/master\\\" class=\\\"ripple\\\">\\n            <span class=\\\"pull-right nav-label\\\"></span>\\n            <span class=\\\"nav-icon\\\">\\n              <i class=\\\"far fa-object-group\\\"></i>\\n            </span>\\n            <span>Master/Detail Component</span>\\n          </a>\\n        </li>\\n        <li (click)=\\\"gotoPage('Component Lifecycle')\\\">\\n          <a routerLink=\\\"/lifecycle\\\" class=\\\"ripple\\\">\\n            <span class=\\\"pull-right nav-label\\\"></span>\\n            <span class=\\\"nav-icon\\\">\\n              <i class=\\\"fas fa-clipboard-list\\\"></i>\\n            </span>\\n            <span>Component lifecycle</span>\\n          </a>\\n        </li>\\n        <li>\\n          <li (click)=\\\"gotoPage('Style')\\\">\\n            <a routerLink=\\\"/style\\\" class=\\\"ripple\\\">\\n              <span class=\\\"pull-right nav-label\\\"></span>\\n              <span class=\\\"nav-icon\\\">\\n                <i class=\\\"far fa-image\\\"></i>\\n              </span>\\n              <span>Style</span>\\n            </a>\\n          </li>\\n          <li (click)=\\\"gotoPage('Service')\\\">\\n            <a routerLink=\\\"/service\\\" class=\\\"ripple\\\">\\n              <span class=\\\"pull-right nav-label\\\"></span>\\n              <span class=\\\"nav-icon\\\">\\n                <i class=\\\"fas fa-globe-asia \\\"></i>\\n              </span>\\n              <span>Service</span>\\n            </a>\\n          </li>\\n          <li (click)=\\\"gotoPage('Route')\\\">\\n            <a routerLink=\\\"/route\\\" class=\\\"ripple\\\">\\n              <span class=\\\"pull-right nav-label\\\"></span>\\n              <span class=\\\"nav-icon\\\">\\n                <i class=\\\"fas fa-link\\\"></i>\\n              </span>\\n              <span>Route</span>\\n            </a>\\n          </li>\\n          <li>\\n            <li (click)=\\\"gotoPage('Form')\\\">\\n              <a routerLink=\\\"/form\\\" class=\\\"ripple\\\">\\n                <span class=\\\"pull-right nav-label\\\"></span>\\n                <span class=\\\"nav-icon\\\">\\n                  <i class=\\\"far fa-file-alt\\\"></i>\\n                </span>\\n                <span>Form</span>\\n              </a>\\n            </li>\\n\\n      </ul>\\n    </nav>\\n  </div>\\n</aside>\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n  @Output() getTitle = new EventEmitter();\n  ngOnInit() {\n  }\n  gotoPage(title) {\n    this.getTitle.emit(title);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"content-heading bg-white\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <h2 class=\\\"m0 text-bold\\\">結構型指令(Directive)</h2>\\n    </div>\\n  </div>\\n  <div class=\\\"row content\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <ol>\\n        <li>\\n          <div class=\\\"hightlight\\\">\\n            <h4>\\n              <span>*ngIf</span>\\n            </h4>\\n            <ul>\\n              <li>\\n                <p> * 是語法糖</p>\\n              </li>\\n              <li>\\n                <p>ngIf是模組語法</p>\\n              </li>\\n              <li>\\n                <p>*ngIf=\\\"true | false\\\" => if(xxx)</p>\\n              </li>\\n              <li>\\n                <p> name=\\\"123\\\"; if(name) === true</p>\\n              </li>\\n              <li>\\n                <p> age=0; if(age) === false</p>\\n              </li>\\n              <li>\\n                <p> persons=[]; if(persons) === true => if(persons.length > 0)=false</p>\\n              </li>\\n              <li>\\n                <p>利用ng-template 可以做*ngIf=\\\"condition; then Ablock else Bblock\\\"</p>\\n              </li>\\n            </ul>\\n          </div>\\n          <div class=\\\"demo\\\">\\n            <h4>\\n              <span>Demo</span>\\n            </h4>\\n            <div class=\\\"view\\\">\\n              <input type=\\\"number\\\" [(ngModel)]=\\\"name\\\">\\n              <p *ngIf=\\\"name > 10\\\">大於10</p>\\n              <p *ngIf=\\\"name <= 10\\\">太小囉</p>\\n            </div>\\n          </div>\\n          <div>\\n            <app-code [code]='ifCode' codeType='markup' title='sugar.component.html'></app-code>\\n            <app-code [code]='ifTsCode' codeType='js' title='sugar.component.ts'></app-code>\\n          </div>\\n        </li>\\n        <li>\\n          <div class=\\\"hightlight\\\">\\n            <h4>\\n              <span>ngForOf</span>\\n            </h4>\\n            <p>1) *ngFor=\\\"let item of data;\\\" </p>\\n            <p>2) 同一層不可以搭配*ngIf作使用</p>\\n            <p>3) 提供五個變數</p>\\n            <ul>\\n              <li>\\n                index:number, index\\n              </li>\\n              <li>\\n                first:boolean, 是否為第一筆資料\\n              </li>\\n              <li>\\n                last:boolean, 是否為最後一筆資料\\n              </li>\\n              <li>\\n                even:boolean, 是否為奇數\\n              </li>\\n              <li>\\n                even:boolean, 是否為奇數\\n              </li>\\n              <li>\\n                odd:boolean, 是否為偶數\\n              </li>\\n            </ul>\\n            <p>4)\\n              <a href=\\\"https://angular.cn/guide/template-syntax#template-input-variables\\\">trackBy</a>\\n              <span>: 避免大量資料異動時，導致畫面效能降低</span>\\n            </p>\\n          </div>\\n          <div class=\\\"demo\\\">\\n            <h4>\\n              <span>Demo</span>\\n            </h4>\\n            <div class=\\\"view\\\">\\n              <table id=\\\"datatable1\\\" class=\\\"table-datatable table table-striped table-hover mv-lg\\\">\\n                <thead>\\n                  <tr>\\n                    <th>index</th>\\n                    <th>name</th>\\n                    <th>age</th>\\n                    <th>first</th>\\n                    <th>last</th>\\n                    <th>even</th>\\n                    <th>odd</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr class=\\\"gradeX\\\" *ngFor=\\\"let item of personsData;let i= index; first as first; last as last; even as isEven; odd as isOdd;\\\">\\n                    <td>{{i+1}}</td>\\n                    <td>{{item.name}}</td>\\n                    <td>{{item.age}}</td>\\n                    <td>\\n                      <span *ngIf=\\\"first\\\">v</span>\\n                    </td>\\n                    <td>\\n                      <span *ngIf=\\\"last\\\">v</span>\\n                    </td>\\n                    <td>\\n                      <span *ngIf=\\\"isEven\\\">v</span>\\n                    </td>\\n                    <td>\\n                      <span *ngIf=\\\"isOdd\\\">v</span>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n            </div>\\n          </div>\\n\\n          <div>\\n            <app-code [code]='forTsCode' codeType='js' title='sugar.component.ts'></app-code>\\n            <app-code [code]='forCode' codeType='markup' title='sugar.component.html' dataLine=\\\"15\\\"></app-code>\\n          </div>\\n        </li>\\n        <li>\\n          <div class=\\\"hightlight\\\">\\n            <h4>\\n              <span>ngSwitch</span>\\n            </h4>\\n            <div class=\\\"demo\\\">\\n              <h4>\\n                <span>Demo</span>\\n              </h4>\\n              <div class=\\\"view\\\">\\n                <input type=\\\"radio\\\" name=\\\"sex\\\" [(ngModel)]=\\\"sex\\\" value=\\\"M\\\">男\\n                <input type=\\\"radio\\\" name=\\\"sex\\\" [(ngModel)]=\\\"sex\\\" value=\\\"F\\\">女\\n                <input type=\\\"radio\\\" name=\\\"sex\\\" [(ngModel)]=\\\"sex\\\" value=\\\"UFO\\\">Other\\n                <span [ngSwitch]=\\\"sex\\\">\\n                  <p *ngSwitchCase=\\\"'M'\\\"> Hi boy~</p>\\n                  <p *ngSwitchCase=\\\"'F'\\\">Hello girl~</p>\\n                  <p *ngSwitchDefault>OMG!</p>\\n                </span>\\n              </div>\\n            </div>\\n          </div>\\n          <app-code [code]='switchTSCode' codeType='js' title='sugar.component.ts'></app-code>\\n          <app-code [code]='switchCode' codeType='markup' title='sugar.component.html' dataLine=\\\"5-8\\\"></app-code>\\n        </li>\\n      </ol>\\n\\n    </div>\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\ndeclare var Prism;\n@Component({\n  selector: 'app-sugar',\n  templateUrl: './sugar.component.html',\n  styleUrls: ['./sugar.component.css']\n})\nexport class SugarComponent implements OnInit,AfterViewInit {\n\n  //#region\n  ifCode = `  <input type=\"number\" [(ngModel)]=\"name\">\n  <p *ngIf=\"name > 10\">大於10</p>\n  <p *ngIf=\"name <= 10\">太小囉</p>\n  \n  //*號取代了template，所以是語法糖\n  <p template=\"ngIf:name > 10\">大於10</p>\n  `;\n\n  ifTsCode = `  constructor() { }\n  age = 1;\n  ngOnInit() {\n  }\n  `;\n\n  forCode = `<table id=\"datatable1\" class=\"table-datatable table table-striped table-hover mv-lg\">\n  <thead>\n    <tr>\n      <th>index</th>\n      <th>name</th>\n      <th>age</th>\n      <th>first</th>\n      <th>last</th>\n      <th>even</th>\n      <th >odd</th>\n    </tr>\n  </thead>\n   <tbody>\n    <tr class=\"gradeX\" *ngFor=\"let item of personsData;let i= index; first as first; last as last; even as isEven; odd as isOdd;\">\n      <td>{{i+1}}</td>\n      <td>{{item.name}}</td>\n      <td>{{item.age}}</td>\n      <td><span *ngIf=\"first\">v</span></td>\n      <td><span *ngIf=\"last\">v</span></td>\n      <td><span *ngIf=\"isEven\">v</span></td>\n      <td><span *ngIf=\"isOdd\">v</span></td>\n    </tr>\n   </tbody>\n  </table>\n  `;\n  forTsCode = `  constructor() { }\n  personsData = [\n    {name: 'kiki', age: 10},\n    {name: 'lala', age: 11},\n    {name: 'kaka', age: 12},\n    {name: 'lili', age: 13},\n  ]\n  `;\n\n  switchCode = `  <input type=\"radio\" name=\"sex\" [(ngModel)]=\"sex\" value=\"M\">男\n  <input type=\"radio\" name=\"sex\" [(ngModel)]=\"sex\" value=\"F\">女\n  <input type=\"radio\" name=\"sex\" [(ngModel)]=\"sex\" value=\"UFO\">Other\n  <span [ngSwitch]=\"sex\">\n  <p *ngSwitchCase=\"'M'\"> Hi boy~</p>\n  <p *ngSwitchCase=\"'F'\">Hello girl~</p>\n  <p *ngSwitchDefault>OMG!</p>\n\n  `;\n\n  switchTSCode = `  constructor() { }\n  sex = 'M';\n  `;\n  //#endregion\n  constructor() { }\n  age = 1;\n  sex = 'M';\n  name:number = 0;\n  personsData = [\n    {name: 'kiki', age: 10},\n    {name: 'lala', age: 11},\n    {name: 'kaka', age: 12},\n    {name: 'lili', age: 13},\n  ];\n  ngOnInit() {\n  }\n\n  ngAfterViewInit(){\n    Prism.highlightAll();\n  }\n}\n","module.exports = \".title.red{\\r\\n    color:red;\\r\\n}\\r\\n\\r\\n.title.blue{\\r\\n    color:blue;\\r\\n}\"","module.exports = \"<div class=\\\"content-heading bg-white\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-9\\\">\\n      <h2 class=\\\"m0 text-thin\\\">屬性型指令(Directive)</h2>\\n    </div>\\n  </div>\\n  <div class=\\\"row content\\\">\\n    <ol>\\n      <li>\\n        <p>\\n          獨立的css: 每個頁面的css是獨立的，避免被複寫\\n        </p>\\n        <app-code codeType=\\\"css\\\" title=\\\"code.component.css\\\" [code]=\\\"codeStyle\\\"></app-code>\\n        <app-code codeType=\\\"css\\\" title=\\\"app.component.css\\\" [code]=\\\"appStyle\\\"></app-code>\\n        <div>\\n          <img src=\\\"assets/img/images/css.png\\\" />\\n        </div>\\n      </li>\\n      <li class=\\\"demo\\\">\\n        <p>ngClass</p>\\n        <p>動態載入css class , {{'{cssClass : true | false}'}}</p>\\n        <h4>\\n            <span>Demo</span>\\n          </h4>\\n        <div class=\\\"view\\\">\\n          <p class=\\\"title\\\" [ngClass]=\\\"{'red': isRed, 'blue':!isRed}\\\">Title</p>\\n          <button (click)=\\\"changeColor()\\\" class=\\\"btn btn-primary\\\">變顏色</button>\\n        </div>\\n        <app-code codeType=\\\"css\\\" title=\\\"web-style.component.css\\\" [code]=\\\"classCode\\\"></app-code>\\n        <app-code codeType=\\\"markup\\\" title=\\\"web-style.component.html\\\" [code]=\\\"classHtmlCode\\\" dataLine=\\\"3\\\"></app-code>\\n        <app-code codeType=\\\"js\\\" title=\\\"web-style.component.ts\\\" [code]=\\\"classTsCode\\\"></app-code>\\n      </li>\\n      <li class=\\\"demo\\\">\\n        <p>ngStyle</p>\\n        <p>動態載入style , {{'{\\\"style\\\" : string}'}}</p>\\n        <h4>\\n          <span>Demo</span>\\n        </h4>\\n        <div class=\\\"view\\\">\\n            <p [ngStyle]=\\\"{'font-size': fontSize }\\\">large size</p>\\n        </div>\\n        <app-code codeType=\\\"js\\\" title=\\\"web-style.component.ts\\\" [code]=\\\"styleTsCode\\\"></app-code>\\n        <app-code codeType=\\\"markup\\\" title=\\\"web-style.component.html\\\" [code]=\\\"styleHtmlCode\\\" dataLine=\\\"2\\\"></app-code>\\n      </li>\\n      <li class=\\\"demo\\\">\\n        <p>Other</p>\\n        <h4>\\n            <span>Demo</span>\\n        </h4>\\n        <div class=\\\"view\\\">\\n          <p [style.font-size.px]=\\\"'12'\\\" [style.background-color]=\\\"'yellow'\\\">small font</p>\\n        </div>\\n        <app-code codeType=\\\"markup\\\" title=\\\"web-style.component.html\\\" [code]=\\\"attrCode\\\"></app-code>\\n\\n      </li>\\n    </ol>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\ndeclare var Prism;\n@Component({\n  selector: 'app-web-style',\n  templateUrl: './web-style.component.html',\n  styleUrls: ['./web-style.component.css']\n})\nexport class WebStyleComponent implements OnInit, AfterViewInit {\n\n  constructor() { }\n  isRed = false;\n  fontSize = '30px';\n  appStyle = `.code{\n    color:red;\n  }\n  `;\n  codeStyle =\n` .code{\n    margin-top:10px;\n    border-top-left-radius: 10px;\n    border-top-right-radius: 10px;\n    padding:5px;\n    background-color: #358ccb;\n    border: 1px solid #dfdfdf;\n    color:white;\n  }\n  `;\n\n  classCode = `.title.red{\n    color:red;\n}\n\n.title.blue{\n    color:blue;\n}\n  `;\n\n  classHtmlCode = `<p class=\"title\" [ngClass]=\"{'red': isRed, 'blue':!isRed}\">Title</p>\n        <button (click)=\"changeColor()\">變顏色</button>\n  `;\n\n  classTsCode = `isRed = false;\n  changeColor() {\n    this.isRed = !this.isRed;\n  }\n  `;\n\n  styleHtmlCode = `<p [ngStyle]=\"{'font-size': fontSize }\">large size</p>`;\n  styleTsCode = `fontSize = '30px';`;\n  attrCode = `<p [style.font-size.px]=\"'12'\" [style.background-color]=\"'yellow'\">small font</p>`;\n  ngOnInit() {\n  }\n\n  changeColor() {\n    this.isRed = !this.isRed;\n  }\n  ngAfterViewInit(){\n    Prism.highlightAll();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","export class Persons {\r\n  id: number;\r\n  name: string;\r\n}\r\n"],"sourceRoot":""}